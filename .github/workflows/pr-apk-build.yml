name: PR APK Build

on:
  pull_request:
    branches: [ master, main, develop ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ cursor/ensure-ci-runs-for-every-pull-request-7f84 ]

jobs:
  build-apk:
    name: Build Debug APK for PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      statuses: write
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Discord Build Started Notification
        if: ${{ vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            🔨 **APK Build Started** 🔨
            
            📋 **${{ github.event_name == 'pull_request' && format('PR #{0}: {1}', github.event.pull_request.number, github.event.pull_request.title) || format('Branch: {0}', github.ref_name) }}**
            👤 **Author:** ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login || github.actor }}
            🔨 **Status:** Building APK...
            🚀 **Commit:** `${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}`
            
            🔗 **Link:** ${{ github.event_name == 'pull_request' && github.event.pull_request.html_url || format('{0}/{1}/commit/{2}', github.server_url, github.repository, github.sha) }}
            🔗 **Build Status:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./Tetra/gradlew
        working-directory: .

      - name: Build Debug APK
        run: ./gradlew assembleDebug
        working-directory: ./Tetra

      - name: Verify APK was built
        id: verify-apk
        run: |
          if [ -f "Tetra/app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "✅ APK built successfully"
            APK_SIZE=$(ls -lh Tetra/app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')
            echo "apk-size=$APK_SIZE" >> $GITHUB_OUTPUT
            echo "build-status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ APK build failed"
            echo "build-status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Rename APK with PR number or branch
        if: success()
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
            SHORT_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)
            mv Tetra/app/build/outputs/apk/debug/app-debug.apk Tetra/app/build/outputs/apk/debug/tetra-pr-${PR_NUMBER}-${SHORT_SHA}.apk
            echo "APK renamed to: tetra-pr-${PR_NUMBER}-${SHORT_SHA}.apk"
          else
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
            BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9-]/_/g')
            mv Tetra/app/build/outputs/apk/debug/app-debug.apk Tetra/app/build/outputs/apk/debug/tetra-${BRANCH_NAME}-${SHORT_SHA}.apk
            echo "APK renamed to: tetra-${BRANCH_NAME}-${SHORT_SHA}.apk"
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event_name == 'pull_request' && format('tetra-pr-{0}-apk', github.event.pull_request.number) || format('tetra-{0}-apk', github.ref_name) }}
          path: Tetra/app/build/outputs/apk/debug/tetra-*.apk
          retention-days: 7

      - name: Comment on PR with build status
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request.number;
            const build_status = '${{ steps.verify-apk.outputs.build-status }}';
            const apk_size = '${{ steps.verify-apk.outputs.apk-size }}';
            const workflow_url = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const short_sha = context.payload.pull_request.head.sha.substring(0, 7);
            const run_number = context.runNumber;
            const timestamp = new Date().toLocaleString('en-US', { 
              timeZone: 'UTC',
              year: 'numeric',
              month: 'short',
              day: 'numeric',
              hour: '2-digit',
              minute: '2-digit',
              second: '2-digit',
              timeZoneName: 'short'
            });
            
            let comment_body = '';
            
            if (build_status === 'success') {
              comment_body = `## 🚀 APK Build #${run_number} Successful!\n\n` +
                `✅ **Build Status:** Success\n` +
                `📦 **APK Size:** ${apk_size}\n` +
                `🔨 **Commit:** \`${short_sha}\`\n` +
                `👤 **Author:** @${context.payload.pull_request.user.login}\n` +
                `🕒 **Build Time:** ${timestamp}\n\n` +
                `### 📥 Download APK\n` +
                `You can download the APK from the [workflow artifacts](${workflow_url}).\n\n` +
                `**Artifact Name:** \`tetra-pr-${pr_number}-apk\`\n\n` +
                `### 🔧 Testing Instructions\n` +
                `1. Click on the workflow link above\n` +
                `2. Scroll down to the "Artifacts" section\n` +
                `3. Download the APK file\n` +
                `4. Install on your Android device or emulator\n\n` +
                `*Note: The APK will be available for 7 days.*`;
            } else {
              comment_body = `## ❌ APK Build #${run_number} Failed\n\n` +
                `💥 **Build Status:** Failed\n` +
                `🔨 **Commit:** \`${short_sha}\`\n` +
                `👤 **Author:** @${context.payload.pull_request.user.login}\n` +
                `🕒 **Build Time:** ${timestamp}\n\n` +
                `Please check the [build logs](${workflow_url}) for more details.`;
            }
            
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment_body
              });
              console.log(`Successfully commented on PR #${pr_number}`);
            } catch (error) {
              console.error(`Failed to comment on PR: ${error.message}`);
              // Don't fail the workflow if commenting fails (e.g., on fork PRs)
            }

      - name: Update PR status check
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const build_status = '${{ steps.verify-apk.outputs.build-status }}';
            const state = build_status === 'success' ? 'success' : 'failure';
            const description = build_status === 'success' 
              ? 'APK built successfully' 
              : 'APK build failed';
            
            try {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: state,
                description: description,
                context: 'APK Build',
                target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
              });
              console.log(`Successfully updated commit status`);
            } catch (error) {
              console.error(`Failed to update commit status: ${error.message}`);
              // Don't fail the workflow if status update fails
            }

      - name: Discord Success Notification
        if: ${{ success() && vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ✅ **APK Build - SUCCESS** ✅
            
            📋 **${{ github.event_name == 'pull_request' && format('PR #{0}: {1}', github.event.pull_request.number, github.event.pull_request.title) || format('Branch: {0}', github.ref_name) }}**
            ✅ **Build Status:** APK Built Successfully
            📦 **APK Size:** ${{ steps.verify-apk.outputs.apk-size }}
            👤 **Author:** ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login || github.actor }}
            🚀 **Commit:** `${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}`
            
            📥 **Download:** The APK is available in the workflow artifacts
            🔗 **Link:** ${{ github.event_name == 'pull_request' && github.event.pull_request.html_url || format('{0}/{1}/commit/{2}', github.server_url, github.repository, github.sha) }}
            🔗 **Artifacts:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            The APK is ready for testing! 🎉

      - name: Discord Failure Notification
        if: ${{ failure() && vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ❌ **APK Build - FAILED** ❌
            
            📋 **${{ github.event_name == 'pull_request' && format('PR #{0}: {1}', github.event.pull_request.number, github.event.pull_request.title) || format('Branch: {0}', github.ref_name) }}**
            💥 **Build Status:** Build Failed
            👤 **Author:** ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login || github.actor }}
            🚀 **Commit:** `${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}`
            
            🔗 **Debug Here:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            🔗 **Link:** ${{ github.event_name == 'pull_request' && github.event.pull_request.html_url || format('{0}/{1}/commit/{2}', github.server_url, github.repository, github.sha) }}
            
            Please check the build logs for errors! 🔧