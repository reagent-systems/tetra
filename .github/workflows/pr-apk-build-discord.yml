name: PR APK Build with Discord

on:
  pull_request:
    branches: [ master, main, develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  build-apk:
    name: Build Debug APK for PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Discord Build Started Notification
        if: ${{ vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            🔨 **PR APK Build Started** 🔨
            
            📋 **PR #${{ github.event.pull_request.number }}:** ${{ github.event.pull_request.title }}
            👤 **Author:** ${{ github.event.pull_request.user.login }}
            🔨 **Status:** Building APK...
            🚀 **Commit:** `${{ github.event.pull_request.head.sha }}`
            
            🔗 **PR Link:** ${{ github.event.pull_request.html_url }}
            🔗 **Build Status:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./Tetra/gradlew
        working-directory: .

      - name: Build Debug APK
        run: ./gradlew assembleDebug
        working-directory: ./Tetra

      - name: Verify APK was built
        id: verify-apk
        run: |
          if [ -f "Tetra/app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "✅ APK built successfully"
            APK_SIZE=$(ls -lh Tetra/app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')
            echo "apk-size=$APK_SIZE" >> $GITHUB_OUTPUT
            echo "build-status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ APK build failed"
            echo "build-status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Rename APK with PR number
        if: success()
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SHORT_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)
          mv Tetra/app/build/outputs/apk/debug/app-debug.apk Tetra/app/build/outputs/apk/debug/tetra-pr-${PR_NUMBER}-${SHORT_SHA}.apk
          echo "APK renamed to: tetra-pr-${PR_NUMBER}-${SHORT_SHA}.apk"

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tetra-pr-${{ github.event.pull_request.number }}-apk
          path: Tetra/app/build/outputs/apk/debug/tetra-pr-*.apk
          retention-days: 7

      # Save build outputs for the comment workflow
      - name: Save build outputs
        if: always()
        run: |
          mkdir -p ./build-outputs
          echo "${{ steps.verify-apk.outputs.build-status }}" > ./build-outputs/build-status.txt
          echo "${{ steps.verify-apk.outputs.apk-size }}" > ./build-outputs/apk-size.txt
          echo "${{ github.event.pull_request.number }}" > ./build-outputs/pr-number.txt
          echo "${{ github.event.pull_request.head.sha }}" > ./build-outputs/commit-sha.txt
          echo "discord" > ./build-outputs/workflow-type.txt

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs-${{ github.run_id }}
          path: ./build-outputs/
          retention-days: 1

      - name: Discord Success Notification
        if: ${{ success() && vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ✅ **PR APK Build - SUCCESS** ✅
            
            📋 **PR #${{ github.event.pull_request.number }}:** ${{ github.event.pull_request.title }}
            ✅ **Build Status:** APK Built Successfully
            📦 **APK Size:** ${{ steps.verify-apk.outputs.apk-size }}
            👤 **Author:** ${{ github.event.pull_request.user.login }}
            🚀 **Commit:** `${{ github.event.pull_request.head.sha }}`
            
            📥 **Download:** Check the PR comment for download instructions
            🔗 **PR Link:** ${{ github.event.pull_request.html_url }}
            
            The APK is ready for testing! 🎉

      - name: Discord Failure Notification
        if: ${{ failure() && vars.ENABLE_DISCORD_NOTIFICATIONS == 'true' && secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ❌ **PR APK Build - FAILED** ❌
            
            📋 **PR #${{ github.event.pull_request.number }}:** ${{ github.event.pull_request.title }}
            💥 **Build Status:** Build Failed
            👤 **Author:** ${{ github.event.pull_request.user.login }}
            🚀 **Commit:** `${{ github.event.pull_request.head.sha }}`
            
            🔗 **Debug Here:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            🔗 **PR Link:** ${{ github.event.pull_request.html_url }}
            
            Please check the build logs for errors! 🔧